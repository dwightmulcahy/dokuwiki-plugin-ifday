name: Validate Conventional Commits

on:
  workflow_call: {}   # This workflow is reusable and will only run when called by another workflow via "uses:"

permissions:
  contents: read
  pull-requests: write
  statuses: write

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      # Check out the PR's HEAD commit without running its workflows
      - name: Checkout PR head
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Validate Conventional Commits
        uses: amannn/action-semantic-pull-request@v5
        env:
          # GitHub automatically provides a GITHUB_TOKEN for each workflow run
          # The action uses this token to query PR details via the GitHub API
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # ---- Conventional Commit types allowed ----
          types: |
            feat
            fix
            docs
            style
            refactor
            perf
            test
            build
            ci
            chore
            revert

          # ---- Conventional Commit scopes allowed ----
          scopes: |
            core
            eval
            syntax
            render
            conf
            tests
            docs
            ci
            build
            deps

          # Whether a scope is required for all commits/PRs.
          # false → optional; true → all commits must have a scope
          requireScope: false

          # Regex pattern for validating the PR subject (title) format.
          # ^[^\s].+[^\.]$ means:
          #   - Must not start with whitespace
          #   - Must contain at least one visible character
          #   - Must NOT end with a period
          subjectPattern: '^[^\s].+[^\.]$'

          # Message shown when subjectPattern fails
          subjectPatternError: >
            The subject must be imperative, non-empty, and should not end with a period.

          # List of PR labels that will bypass this check
          # Useful for release PRs or auto-generated PRs
          ignoreLabels: |
            skip-semantic-check

          # If true, enforces that a PR with only one commit must still pass validation
          validateSingleCommit: false

          # If true, PRs marked as "WIP" (work in progress) will fail validation
          wip: true
